/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ButtonVariation, Color, Size } from "./components/key-button/key-button";
import { CrossAxisArrangement, MainAxisArrangement } from "./components/structure/key-stack/key-stack";
export namespace Components {
    interface KeyAppFrame {
    }
    interface KeyAppPage {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface KeyButton {
        "color": Color;
        "disabled": boolean;
        "expand"?: 'full' | 'block';
        "size": Size;
        "type": 'submit' | 'reset' | 'button';
        "variation": ButtonVariation;
    }
    interface KeyCard {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface KeyCardSection {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface KeyColumn {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface KeyLayout {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface KeyPageActions {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface KeyRow {
        "fit"?: 'expand' | 'loose';
    }
    interface KeyStack {
        "axis": 'vertical' | 'horizontal';
        "crossAxisArrangement": CrossAxisArrangement;
        "crossfit"?: 'tight' | 'expand';
        "fit"?: 'tight' | 'expand';
        "mainAxisArrangement": MainAxisArrangement;
    }
}
declare global {
    interface HTMLKeyAppFrameElement extends Components.KeyAppFrame, HTMLStencilElement {
    }
    var HTMLKeyAppFrameElement: {
        prototype: HTMLKeyAppFrameElement;
        new (): HTMLKeyAppFrameElement;
    };
    interface HTMLKeyAppPageElement extends Components.KeyAppPage, HTMLStencilElement {
    }
    var HTMLKeyAppPageElement: {
        prototype: HTMLKeyAppPageElement;
        new (): HTMLKeyAppPageElement;
    };
    interface HTMLKeyButtonElement extends Components.KeyButton, HTMLStencilElement {
    }
    var HTMLKeyButtonElement: {
        prototype: HTMLKeyButtonElement;
        new (): HTMLKeyButtonElement;
    };
    interface HTMLKeyCardElement extends Components.KeyCard, HTMLStencilElement {
    }
    var HTMLKeyCardElement: {
        prototype: HTMLKeyCardElement;
        new (): HTMLKeyCardElement;
    };
    interface HTMLKeyCardSectionElement extends Components.KeyCardSection, HTMLStencilElement {
    }
    var HTMLKeyCardSectionElement: {
        prototype: HTMLKeyCardSectionElement;
        new (): HTMLKeyCardSectionElement;
    };
    interface HTMLKeyColumnElement extends Components.KeyColumn, HTMLStencilElement {
    }
    var HTMLKeyColumnElement: {
        prototype: HTMLKeyColumnElement;
        new (): HTMLKeyColumnElement;
    };
    interface HTMLKeyLayoutElement extends Components.KeyLayout, HTMLStencilElement {
    }
    var HTMLKeyLayoutElement: {
        prototype: HTMLKeyLayoutElement;
        new (): HTMLKeyLayoutElement;
    };
    interface HTMLKeyPageActionsElement extends Components.KeyPageActions, HTMLStencilElement {
    }
    var HTMLKeyPageActionsElement: {
        prototype: HTMLKeyPageActionsElement;
        new (): HTMLKeyPageActionsElement;
    };
    interface HTMLKeyRowElement extends Components.KeyRow, HTMLStencilElement {
    }
    var HTMLKeyRowElement: {
        prototype: HTMLKeyRowElement;
        new (): HTMLKeyRowElement;
    };
    interface HTMLKeyStackElement extends Components.KeyStack, HTMLStencilElement {
    }
    var HTMLKeyStackElement: {
        prototype: HTMLKeyStackElement;
        new (): HTMLKeyStackElement;
    };
    interface HTMLElementTagNameMap {
        "key-app-frame": HTMLKeyAppFrameElement;
        "key-app-page": HTMLKeyAppPageElement;
        "key-button": HTMLKeyButtonElement;
        "key-card": HTMLKeyCardElement;
        "key-card-section": HTMLKeyCardSectionElement;
        "key-column": HTMLKeyColumnElement;
        "key-layout": HTMLKeyLayoutElement;
        "key-page-actions": HTMLKeyPageActionsElement;
        "key-row": HTMLKeyRowElement;
        "key-stack": HTMLKeyStackElement;
    }
}
declare namespace LocalJSX {
    interface KeyAppFrame {
    }
    interface KeyAppPage {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface KeyButton {
        "color"?: Color;
        "disabled"?: boolean;
        "expand"?: 'full' | 'block';
        "onKeyBlur"?: (event: CustomEvent<void>) => void;
        "onKeyFocus"?: (event: CustomEvent<void>) => void;
        "size"?: Size;
        "type"?: 'submit' | 'reset' | 'button';
        "variation"?: ButtonVariation;
    }
    interface KeyCard {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface KeyCardSection {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface KeyColumn {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface KeyLayout {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface KeyPageActions {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface KeyRow {
        "fit"?: 'expand' | 'loose';
    }
    interface KeyStack {
        "axis"?: 'vertical' | 'horizontal';
        "crossAxisArrangement"?: CrossAxisArrangement;
        "crossfit"?: 'tight' | 'expand';
        "fit"?: 'tight' | 'expand';
        "mainAxisArrangement"?: MainAxisArrangement;
    }
    interface IntrinsicElements {
        "key-app-frame": KeyAppFrame;
        "key-app-page": KeyAppPage;
        "key-button": KeyButton;
        "key-card": KeyCard;
        "key-card-section": KeyCardSection;
        "key-column": KeyColumn;
        "key-layout": KeyLayout;
        "key-page-actions": KeyPageActions;
        "key-row": KeyRow;
        "key-stack": KeyStack;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "key-app-frame": LocalJSX.KeyAppFrame & JSXBase.HTMLAttributes<HTMLKeyAppFrameElement>;
            "key-app-page": LocalJSX.KeyAppPage & JSXBase.HTMLAttributes<HTMLKeyAppPageElement>;
            "key-button": LocalJSX.KeyButton & JSXBase.HTMLAttributes<HTMLKeyButtonElement>;
            "key-card": LocalJSX.KeyCard & JSXBase.HTMLAttributes<HTMLKeyCardElement>;
            "key-card-section": LocalJSX.KeyCardSection & JSXBase.HTMLAttributes<HTMLKeyCardSectionElement>;
            "key-column": LocalJSX.KeyColumn & JSXBase.HTMLAttributes<HTMLKeyColumnElement>;
            "key-layout": LocalJSX.KeyLayout & JSXBase.HTMLAttributes<HTMLKeyLayoutElement>;
            "key-page-actions": LocalJSX.KeyPageActions & JSXBase.HTMLAttributes<HTMLKeyPageActionsElement>;
            "key-row": LocalJSX.KeyRow & JSXBase.HTMLAttributes<HTMLKeyRowElement>;
            "key-stack": LocalJSX.KeyStack & JSXBase.HTMLAttributes<HTMLKeyStackElement>;
        }
    }
}
